<?php

/**
 * This is the model base class for the table "{{property}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Property".
 *
 * Columns in table "{{property}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $project_name
 * @property string $tag_line
 * @property string $builder
 * @property string $location
 * @property string $area
 * @property string $bed
 * @property string $bath
 * @property integer $balcony
 * @property integer $parking
 * @property string $rate
 * @property string $budget
 * @property integer $type
 * @property integer $hot_property
 * @property integer $swiming_pool
 * @property integer $garden
 * @property integer $rain_water_harvesting
 * @property integer $security
 * @property integer $power_backup
 * @property integer $gymnasium
 * @property string $city
 * @property string $image_path
 * @property string $address
 * @property string $description
 * @property integer $type_of_property
 * @property string $possession
 *
 */
abstract class BaseProperty extends CActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{property}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Property|Properties', $n);
	}

	public static function representingColumn() {
		return 'project_name';
	}

	public function rules() {
		return array(
			array('project_name, builder, location, area, bed, rate, budget, type, hot_property, city, address, type_of_property', 'required'),
			array('balcony, parking, type, hot_property, swiming_pool, garden, rain_water_harvesting, security, power_backup, gymnasium, type_of_property', 'numerical', 'integerOnly'=>true),
			array('project_name, builder, location, image_path, address', 'length', 'max'=>200),
			array('tag_line, area, bed, bath, rate, city', 'length', 'max'=>100),
			array('budget', 'length', 'max'=>4),
			array('description', 'length', 'max'=>2000),
			array('possession', 'length', 'max'=>45),
			array('possession', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, project_name, tag_line, builder, location, area, bed, bath, balcony, parking, rate, budget, type, hot_property, swiming_pool, garden, rain_water_harvesting, security, power_backup, gymnasium, city, image_path, address, description, type_of_property, possession', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'project_name' => Yii::t('app', 'Project Name'),
			'tag_line' => Yii::t('app', 'Tag Line'),
			'builder' => Yii::t('app', 'Builder'),
			'location' => Yii::t('app', 'Location'),
			'area' => Yii::t('app', 'Area'),
			'bed' => Yii::t('app', 'Bed'),
			'bath' => Yii::t('app', 'Bath'),
			'balcony' => Yii::t('app', 'Balcony'),
			'parking' => Yii::t('app', 'Parking'),
			'rate' => Yii::t('app', 'Rate'),
			'budget' => Yii::t('app', 'Budget'),
			'type' => Yii::t('app', 'Type'),
			'hot_property' => Yii::t('app', 'Hot Property'),
			'swiming_pool' => Yii::t('app', 'Swiming Pool'),
			'garden' => Yii::t('app', 'Garden'),
			'rain_water_harvesting' => Yii::t('app', 'Rain Water Harvesting'),
			'security' => Yii::t('app', 'Security'),
			'power_backup' => Yii::t('app', 'Power Backup'),
			'gymnasium' => Yii::t('app', 'Gymnasium'),
			'city' => Yii::t('app', 'City'),
			'image_path' => Yii::t('app', 'Image Path'),
			'address' => Yii::t('app', 'Address'),
			'description' => Yii::t('app', 'Description'),
			'type_of_property' => Yii::t('app', 'Type Of Property'),
			'possession' => Yii::t('app', 'Possession'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('project_name', $this->project_name, true);
		$criteria->compare('tag_line', $this->tag_line, true);
		$criteria->compare('builder', $this->builder, true);
		$criteria->compare('location', $this->location, true);
		$criteria->compare('area', $this->area, true);
		$criteria->compare('bed', $this->bed, true);
		$criteria->compare('bath', $this->bath, true);
		$criteria->compare('balcony', $this->balcony);
		$criteria->compare('parking', $this->parking);
		$criteria->compare('rate', $this->rate, true);
		$criteria->compare('budget', $this->budget, true);
		$criteria->compare('type', $this->type);
		$criteria->compare('hot_property', $this->hot_property);
		$criteria->compare('swiming_pool', $this->swiming_pool);
		$criteria->compare('garden', $this->garden);
		$criteria->compare('rain_water_harvesting', $this->rain_water_harvesting);
		$criteria->compare('security', $this->security);
		$criteria->compare('power_backup', $this->power_backup);
		$criteria->compare('gymnasium', $this->gymnasium);
		$criteria->compare('city', $this->city, true);
		$criteria->compare('image_path', $this->image_path, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('type_of_property', $this->type_of_property);
		$criteria->compare('possession', $this->possession, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}